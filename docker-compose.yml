version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}
    swarm-endpoints: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus:v2.2.1
    volumes:
      - ./components/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
      - swarm-endpoints:/etc/swarm-endpoints/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter:v0.16.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.14.0
    ports:
      - 9093:9093
    volumes:
      - ./components/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:5.1.0
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./components/grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
    
  swarm-discover:
    image: seqvence/prometheus-swarm
    command: ["-i", "5", "-o", "/swarm-endpoints/swarm-endpoints.json", "-p" , "prometheus_prometheus"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - swarm-endpoints:/swarm-endpoints/
    labels:
        prometheus.ignore: "true"
    deploy:
      placement:
        constraints:
          - node.role == manager